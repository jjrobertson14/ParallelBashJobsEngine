#!/bin/bash
### BEGIN INIT INFO
#
# /etc/init.d/pbjengined
#
# pbjengined            
#
# This shell script takes care of starting and stopping
# pbjengined (Parallel Bash Jobs Engine daemon)
#
##
#
# Author:               jjrobertson14
#
# Short-Description:    pbjengined is the Parallel Bash Jobs Engine daemon
#
# Description:          Parallel Bash Jobs Engine can run commands in JOB FILES in parallel 
#                       (using GNU parallel)
#
#                       JOB FILES may be one of:
#                       1. a txt file containing commands one per line
#                       2. a script to run as a whole
#                       (where each line of stdout that is marked as a command 
#                        , with a prefix of '_-_-_COMMAND', is run in parallel)
#
# Provides:             pbjengined
# Required-Start:       $remote_fs $syslog $time
# Required-Stop:        $remote_fs $syslog $time
# Should-Start:         $network $named slapd autofs ypbind nscd nslcd winbind sssd
# Should-Stop:          $network $named slapd autofs ypbind nscd nslcd winbind sssd
# Default-Start:        2 3 4 5
# Default-Stop:
#
### END INIT INFO

# Source function library.
. /lib/lsb/init-functions

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME="pbjengined"
DESC="Parallel Bash Jobs Engine can run commands in JOB FILES in parallel "
SCRIPTNAME=/etc/init.d/"$NAME"
PBJENGINE_HOST=`hostname`
PIDFILE=/var/run/pbjengined.pid

# Read /etc/pbjengined.conf
if [ -f /etc/pbjengined.conf ]; then
        . /etc/pbjengined.conf
fi

# [Set params from /etc/pbjengined.conf] set params with values of vars from /etc/pbjengined.conf
PBJENGINE_SCRIPT_PATH=/opt/pbjengine/bin/${PBJENGINE_SCRIPT}

# Test that the daemon file exists
DAEMON=${PBJENGINE_SCRIPT_PATH}
test -f $DAEMON || exit 0

#===============================================================================
case "$1" in
start)  log_daemon_msg "Starting Parallel Bash Jobs Engine daemon" "pbjengined"
        start_daemon -p $PIDFILE $DAEMON &
        log_daemon_msg $?
        ;;
stop)   log_daemon_msg "Stopping Parallel Bash Jobs Engine daemon" "pbjengined"
        # killproc -p $PIDFILE $DAEMON
        # workaround since killproc was not killing the daemon because its name is > 15 chars, does not work for --exec flag of /sbin/start-stop-daemon and I don't want to rename it
        f_pid=$(ps -ef |grep $DAEMON |grep -v grep |awk '{print $2}')
        [ -n "$f_pid" ] && kill "$f_pid"
        RETVAL=$?
        [ $RETVAL -eq 0 ] && [ -e "$PIDFILE" ] && rm -f $PIDFILE
        log_end_msg $RETVAL
        ;;
force-stop)   log_daemon_msg "Using kill -9 on Parallel Bash Jobs Engine daemon" "pbjengined"
        f_pid=$(ps -ef |grep $DAEMON |grep -v grep |awk '{print $2}')
        [ -n "$f_pid" ] && kill -9 "$f_pid"
        RETVAL=$?
        [ $RETVAL -eq 0 ] && [ -e "$PIDFILE" ] && rm -f $PIDFILE
        log_end_msg $RETVAL
        ;;
restart) log_daemon_msg "Restarting Parallel Bash Jobs Engine daemon" "pbjengined"
        $0 stop
        $0 start
        ;;
reload|force-reload) log_daemon_msg "Reloading configuration files for Parallel Bash Jobs Engine daemon" "pbjengined"
        # pbjengined reloads automatically
        log_end_msg 0
        ;;
status)
        #status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
        # workaround since status_of_proc was not reporting the status correctly
        ps -ef |grep $DAEMON |grep -qv grep
        if [ $? = 0 ];
        then
                echo pbjengined is running
        else
                echo pbjengined is NOT running
        fi
        ;;
*)      log_action_msg "Usage: /etc/init.d/pbjengined {start|stop|status|restart|reload|force-reload}"
        exit 2
        ;;
esac
exit 0
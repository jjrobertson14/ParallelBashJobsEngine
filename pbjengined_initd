#!/bin/bash
### BEGIN INIT INFO
#
# /etc/init.d/pbjengined
#
# pbjengined            
#
# This shell script takes care of starting and stopping
# pbjengined (Parallel Bash Jobs Engine daemon)
#
# Author:               jjrobertson14
#
# Short-Description:    pbjengined is the Parallel Bash Jobs Engine daemon
#
# Description:          Parallel Bash Jobs Engine can run commands in JOB FILES in parallel 
#                       (using GNU parallel)
#
#                       JOB FILES may be one of:
#                       1. a txt file containing commands one per line
#                       2. a script to run as a whole
#                       (where each line of stdout that is marked as a command 
#                        , with a prefix of '_-_-_COMMAND', is run in parallel)
#
# Provides:             pbjengined
# TODO Required-Start:    $remote_fs $syslog $time
# TODO Required-Stop:     $remote_fs $syslog $time
# TODO Should-Start:      $network $named slapd autofs ypbind nscd nslcd winbind sssd
# TODO Should-Stop:       $network $named slapd autofs ypbind nscd nslcd winbind sssd
# TODO Default-Start:     2 3 4 5
# TODO Default-Stop:
#
### END INIT INFO

# Source function library.
. /lib/lsb/init-functions

PATH=/bin:/usr/bin:/sbin:/usr/sbin
DAEMON=/opt/pbjengine/pbjengined
NAME="pbjengined"
DESC="Parallel Bash Jobs Engine can run commands in JOB FILES in parallel "
SCRIPTNAME=/etc/init.d/"$NAME"
PBJENGINE_HOST=`hostname`
PIDFILE=/var/run/pbjengined.pid

if [ -f /etc/pbjengined.conf ]; then
        . /etc/pbjengined.conf
fi

test -f $DAEMON || exit 0

. /lib/lsb/init-functions

#===============================================================================
case "$1" in
start)  log_daemon_msg "Starting periodic command scheduler" "cron"
        start_daemon -p $PIDFILE $DAEMON $EXTRA_OPTS
        log_end_msg $?
        ;;
stop)   log_daemon_msg "Stopping periodic command scheduler" "cron"
        killproc -p $PIDFILE $DAEMON
        RETVAL=$?
        [ $RETVAL -eq 0 ] && [ -e "$PIDFILE" ] && rm -f $PIDFILE
        log_end_msg $RETVAL
        ;;
restart) log_daemon_msg "Restarting periodic command scheduler" "cron"
        $0 stop
        $0 start
        ;;
reload|force-reload) log_daemon_msg "Reloading configuration files for periodic command scheduler" "cron"
        # cron reloads automatically
        log_end_msg 0
        ;;
status)
        status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
        ;;
*)      log_action_msg "Usage: /etc/init.d/cron {start|stop|status|restart|reload|force-reload}"
        exit 2
        ;;
esac
exit 0